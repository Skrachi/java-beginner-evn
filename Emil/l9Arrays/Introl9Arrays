                                          Масиви ( Arrays ).
    ---------------------------------------------------------------------------------------------------------
    Масива е множество данни от един и същи вид . Елемента е една от много стойности , а Индекса е  номера на стойността
    започваща от 0.
       ---------------------------------------------------------------------------------------------------------
                                        Създаване на Масив ( Arrays).

                                    type[] name = new type[length];
                                    Example:        int[] numbers = new int[10];

                При декларацията всеки елемент  получава стойност , еквивалентна на 0, null , false..

     name[index]                // access - Прочитане на стойността.

     name[index] = value;        // modify - Задаване на стойност.

     Стойностите в boolean са - TRUE OR FALSE !

                                                Out-of-bounds
        Позволените индекси са между 0 и length - 1
        Опитът да присвоим стойност или да четем извън тези граници, води до ArrayIndexOutOfBoundsException.

        ArrayIndexOutOfBoundsException - Представлява когато не сме изчислили Loop от къде да стартира и къде да свърши

        Пример : int [] data = new int[10]
          1. System.out.print(data[0]); // OK.
          2. System.out.print(data[9]); // OK.
          3. System.out.print(data[10]); // Exception.
          4. System.out.print(data[-1]); // Exception.

           В случая сме задали масив от 10 , т.е имаме клетка от 0 до 9 , при принтене на 1 и 2 sout , няма проблеми ,
           но при 3 и 4 sout , имаме проблем тъй като клетката ни е от 0 до 9 , а викаме -1 и 10.

                                        Обхождане на масив с for цикъл.

               for (int i = 0; i < number.length ; i++) { // последната стойност която i ще вземе е number.length - 1.
               System.out.print(numbers[i] + " ");
               }
               output:  0 2 4 6 8 10 12 14

                                               Инициализация на Масив.

                 type[] name = {value, value, … value};
                 Example:
                 int[] numbers = {12, 49, -2, 26, 5, 17, -6};

                                                Недостатъци на Масивите.

                                        - Не може да се промени размерът им след като са създадени :

                  int[] a = new int[4]
                  a.length = 10;       // Error

                                                - Не можем да ги сравняваме с == :

                  int [] a1 = {42 , -7 , 21 ,5};
                  int [] a2 = {42 , -7 , 21 ,5};
                  if ( a1 == a2 ) {.... } // false!
                  if ( a1.equals(a2) ) {.... } // false!

                    За да сравним два масива:
                    Arrays.equals(array1, array2); // Сравняваме дали съдържанието им е едно и също.


                                   - System.out.println() не знае как да ги отпечата :

                    int [] a2 = {42 , -7 , 21 ,5};
                    System.out.println(a2);   // [I@98f8c4]

                    За да отпечатаме съдържанието на масив:
                    System.out.println(Arrays.toString(array));

                                               - За да запълним масив с определена стойност:

                    Arrays.fill(array, value); // Масива може да стартира от -1 вместо 0 .

                                                    - За да създадем ново копие на масив:

                    Arrays.copyOf(array, length); // Можем да направим копие на масива или на елементи от масива.

                                             Call-by-value спрямо Call-by-reference.

                     Когато използваме масив като входен параметър, подаваме референция (reference) към оригиналния
                     масив. Методът има достъп до оригиналния масив и промените, които методът прави, са видими и във
                     викащия код.

                     int [] myArray;  // creates reference variable - Променливата myArray; -->сочи където се намира
                                        самия масив в паметта т.е new int[6]

                     myArray = new int[6]; // creates the space to hold 6 int values , new е операторът ,който създаваме
                                                 самия масив в паметта.
                       myArray[1] = 1;
                       myArray[5] = 5;


                                                Двумерни и многомерни масиви.

                      Декларация:
                      int[][] twoDimentionalArray;
                      int[][][] threeDimentionalArray;
                      Примери за декларация и инициализация:
                      int[][] intMatrix = new int[3][4];
                      float[][] floatMatrix = new float[8][2];
                      String[][][] stringCube = new String[5][5][5];








